@page "/addcard"
@using SharpCards.Models
@inject CardsService CardsService;

<PageTitle>AddCard</PageTitle>

<h1>Cards management</h1>

<p role="status">Current count: @CardsService.Cards.Count</p>
<div class="card-deck">
<div class="card card-body">
    <h2>Add new card</h2>
<EditForm Model="@newCard" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label class="col-sm-2 col-form-label" for="frontText">Front text</label>
        <InputTextArea class="form-control" id="frontText" @bind-Value="newCard.FrontText" />
    </div>
    <div class="form-group">
        <label class="col-sm-2 col-form-label" for="BackText">Back text</label>
        <InputTextArea class="form-control" id="backText" @bind-Value="newCard.BackText" />
    </div>

    <button type="submit" class="btn btn-primary">Add</button>
</EditForm>
</div>

<div class="card card-body">
<h2>Cards</h2>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Front Text</th>
            <th>Back Text</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var card in CardsService.Cards)
        {
            <tr>
                <td>@card.Id</td>
                <td>@card.FrontText</td>
                <td>@card.BackText</td>
                <td>
                    <button class="btn btn-danger" @onclick="() => DeleteCard(card.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
</div>
@code {
    private Card newCard = new Card() { Id = Guid.NewGuid()};

  protected override async Task OnInitializedAsync()
    {
        if (!CardsService.IsInitialized)
        {
            await CardsService.Init();
        }
    }

    private async Task HandleValidSubmit()
    {
        // Process the valid form
        await CardsService.AddCard(newCard);
        newCard = new Card() { Id = Guid.NewGuid()};
    }

    private async Task DeleteCard(Guid id)
    {
        Console.WriteLine("Deleting card with id: " + id);
        await CardsService.DeleteCard(id);
    }
}